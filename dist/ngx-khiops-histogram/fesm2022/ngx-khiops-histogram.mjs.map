{"version":3,"file":"ngx-khiops-histogram.mjs","sources":["../../../projects/ngx-khiops-histogram/src/lib/model/ngx-khiops-histogram.types.ts","../../../projects/ngx-khiops-histogram/src/lib/services/ngx-khiops-histogram.ui.service.ts","../../../projects/ngx-khiops-histogram/src/lib/model/ngx-khiops-histogram.bar-vo.ts","../../../projects/ngx-khiops-histogram/src/lib/services/ngx-khiops-histogram.service.ts","../../../projects/ngx-khiops-histogram/src/lib/components/tooltip/ngx-khiops-histogram.tooltip.component.ts","../../../projects/ngx-khiops-histogram/src/lib/components/histogram/ngx-khiops-histogram.component.ts","../../../projects/ngx-khiops-histogram/src/lib/components/histogram/ngx-khiops-histogram.component.html","../../../projects/ngx-khiops-histogram/src/lib/ngx-khiops-histogram.module.ts","../../../projects/ngx-khiops-histogram/src/public-api.ts","../../../projects/ngx-khiops-histogram/src/ngx-khiops-histogram.ts"],"sourcesContent":["export enum HistogramType {\n  XLOG = 'xLog',\n  XLIN = 'xLin',\n  YLOG = 'yLog',\n  YLIN = 'yLin',\n}\n","import { Injectable } from '@angular/core';\r\n// import { TranslateService } from '@ngstack/translate';\r\nimport * as d3 from 'd3';\r\nimport { HistogramValuesI } from '../interfaces/ngx-khiops-histogram.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HistogramUIService {\r\n  static readonly chartColors: string[] = ['#6e93d5', '#ffbe46'];\r\n  // static translate: TranslateService;\r\n\r\n  static setTranslationService() {\r\n    // translate: TranslateService\r\n    // this.translate = translate;\r\n  }\r\n\r\n  static getColor(i: number): string {\r\n    return this.chartColors[i];\r\n  }\r\n\r\n  static getColors(): string[] {\r\n    return this.chartColors;\r\n  }\r\n\r\n  // @ts-ignore\r\n  static getCurrentBarPosition(\r\n    datas: HistogramValuesI[],\r\n    canvasPosition: DOMRect,\r\n    event: MouseEvent,\r\n    yPadding: number = 0\r\n  ) {\r\n    if (datas) {\r\n      let x = event.pageX - canvasPosition.left;\r\n      let y = event.pageY - canvasPosition.top;\r\n\r\n      for (let i = 0; i < datas.length; i++) {\r\n        if (\r\n          // @ts-ignore\r\n          y > datas?.[i].coords?.y &&\r\n          // @ts-ignore\r\n          y < datas?.[i].coords?.y + datas?.[i].coords?.barH + yPadding / 2 &&\r\n          // @ts-ignore\r\n          x > datas?.[i].coords?.x &&\r\n          // @ts-ignore\r\n          x < datas?.[i].coords?.x + datas?.[i].coords?.barW\r\n        ) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  static generateTooltip(\r\n    datasLabels: any,\r\n    d: HistogramValuesI,\r\n    isFirstInterval: boolean\r\n  ): string {\r\n    let bounds = '';\r\n    if (isFirstInterval) {\r\n      bounds += '[';\r\n    } else {\r\n      bounds += ']';\r\n    }\r\n    bounds += d.partition[0] + ', ' + d.partition[1] + ']';\r\n    return (\r\n      // this.translate.get('GLOBAL.DENSITY') +\r\n      datasLabels.value +\r\n      ': ' +\r\n      d3.format('.2e')(d.value) +\r\n      '<br>' +\r\n      // this.translate.get('GLOBAL.FREQUENCY') +\r\n      datasLabels.frequency +\r\n      ': ' +\r\n      d.frequency +\r\n      '<br>' +\r\n      // this.translate.get('GLOBAL.INTERVAL') +\r\n      datasLabels.partition +\r\n      ': ' +\r\n      bounds\r\n    );\r\n  }\r\n\r\n  static initCanvasContext(\r\n    canvas: HTMLCanvasElement | undefined | null,\r\n    w: number,\r\n    h: number\r\n  ) {\r\n    const ctx = canvas?.getContext('2d');\r\n    if (ctx && canvas) {\r\n      ctx.imageSmoothingEnabled = true;\r\n      canvas.width = w;\r\n      canvas.height = h;\r\n    }\r\n    return ctx;\r\n  }\r\n\r\n  /**\r\n   * Before draw canvas, clean dom\r\n   */\r\n  static cleanDomContext(\r\n    ctx: CanvasRenderingContext2D | undefined | null,\r\n    canvas: HTMLCanvasElement | undefined | null\r\n  ) {\r\n    if (canvas) {\r\n      // @ts-ignore\r\n      ctx = canvas.getContext('2d');\r\n      // @ts-ignore\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n  }\r\n\r\n  static hexToRgba(hex: string, alpha: number) {\r\n    if (!/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      throw new Error('Invalid Hex format');\r\n    }\r\n    let c;\r\n    if (hex.length === 4) {\r\n      c = '#' + [hex[1], hex[1], hex[2], hex[2], hex[3], hex[3]].join('');\r\n    } else {\r\n      c = hex;\r\n    }\r\n    const r = parseInt(c.slice(1, 3), 16);\r\n    const g = parseInt(c.slice(3, 5), 16);\r\n    const b = parseInt(c.slice(5, 7), 16);\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n  }\r\n}\r\n","import { HistogramValuesI } from '../interfaces/ngx-khiops-histogram.interfaces';\nimport { HistogramType } from './ngx-khiops-histogram.types';\nimport { HistogramUIService } from '../services/ngx-khiops-histogram.ui.service';\n\nexport class HistogramBarVO {\n  barWlog: number = 0;\n  barXlog: number = 0;\n  barWlin: number = 0;\n  barXlin: number = 0;\n  color: string = HistogramUIService.getColor(1);\n  partition = [];\n\n  constructor(d: HistogramValuesI, middlewidth: number, xType: string) {\n    //@ts-ignore\n    this.partition = d.partition;\n    if (xType === HistogramType.XLIN) {\n      let barWlin = 0;\n      if (this.partition[0] < 0 && this.partition[1] > 0) {\n        barWlin = Math.abs(this.partition[0]) + Math.abs(this.partition[1]);\n      } else {\n        barWlin = Math.abs(this.partition[0]) - Math.abs(this.partition[1]);\n      }\n      this.barWlin = Math.abs(barWlin);\n    } else {\n      let barWlog = 0;\n      if (d.partition[0] === 0 || d.partition[1] === 0) {\n        barWlog = Math.log10(middlewidth);\n        this.color = HistogramUIService.getColor(0);\n      } else {\n        barWlog =\n          Math.log10(Math.abs(this.partition[0])) -\n          Math.log10(Math.abs(this.partition[1]));\n\n        if (this.partition[0] < 0 && this.partition[1] > 0) {\n          barWlog = Math.log10(middlewidth) * 2;\n          this.color = HistogramUIService.getColor(0);\n        }\n      }\n      this.barWlog = Math.abs(barWlog);\n    }\n  }\n\n  computeXLog(bars: HistogramBarVO[]) {\n    let sum = bars.reduce(\n      (partialSum: number, a: HistogramBarVO) =>\n        Math.abs(partialSum) + Math.abs(a.barWlog),\n      0\n    );\n    this.barXlog = sum || 0;\n  }\n\n  computeXLin(bars: HistogramBarVO[]) {\n    let sum = bars.reduce(\n      (partialSum: number, a: HistogramBarVO) =>\n        Math.abs(partialSum) + Math.abs(a.barWlin),\n      0\n    );\n    this.barXlin = sum || 0;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HistogramBarVO } from '../model/ngx-khiops-histogram.bar-vo';\r\nimport { HistogramType } from '../model/ngx-khiops-histogram.types';\r\nimport {\r\n  HistogramValuesI,\r\n  RangeXLinI,\r\n  RangeXLogI,\r\n  RangeYLogI,\r\n} from '../interfaces/ngx-khiops-histogram.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HistogramService {\r\n  rangeXLin: RangeXLinI = {};\r\n  rangeYLin: number = 0;\r\n  rangeYLog: RangeYLogI = {\r\n    min: 0,\r\n    max: 0,\r\n  };\r\n  rangeXLog: RangeXLogI = {};\r\n\r\n  getRangeX(datas: HistogramValuesI[]): [RangeXLinI, RangeXLogI] {\r\n    this.rangeXLog.inf = datas.find(function (d: HistogramValuesI) {\r\n      return d.partition[0] === 0 || d.partition[1] === 0;\r\n    });\r\n\r\n    this.rangeXLog.min = datas[0].partition[0];\r\n    this.rangeXLog.negValuesCount = datas.filter(function (\r\n      d: HistogramValuesI\r\n    ) {\r\n      return d.partition[1] < 0;\r\n    })?.length;\r\n    this.rangeXLog.posValuesCount = datas.filter(function (\r\n      d: HistogramValuesI\r\n    ) {\r\n      return d.partition[1] > 0;\r\n    })?.length;\r\n    if (this.rangeXLog.inf) {\r\n      // 0 exist\r\n      this.rangeXLog.negStart =\r\n        // @ts-ignore update it with es2023\r\n        datas.findLast(function (d: HistogramValuesI) {\r\n          return d.partition[0] < 0 && d.partition[1] <= 0;\r\n        })?.partition[0] || undefined;\r\n      this.rangeXLog.posStart =\r\n        datas.find(function (d: HistogramValuesI) {\r\n          return d.partition[0] > 0 && d.partition[1] > 0;\r\n        })?.partition[0] || undefined;\r\n    } else {\r\n      this.rangeXLog.negStart =\r\n        // @ts-ignore update it with es2023\r\n        datas.findLast(function (d: HistogramValuesI) {\r\n          return d.partition[0] < 0 && d.partition[1] <= 0;\r\n        })?.partition[1] || undefined;\r\n      this.rangeXLog.posStart =\r\n        datas.find(function (d: HistogramValuesI) {\r\n          return d.partition[0] > 0 && d.partition[1] > 0;\r\n        })?.partition[0] || undefined;\r\n    }\r\n\r\n    this.rangeXLog.max = datas[datas.length - 1].partition[1];\r\n\r\n    this.rangeXLog.middlewidth = 1.2;\r\n\r\n    this.rangeXLin.min = datas[0].partition[0];\r\n    this.rangeXLin.max = datas[datas.length - 1].partition[1];\r\n\r\n    return [this.rangeXLin, this.rangeXLog];\r\n  }\r\n\r\n  getLinRangeY(datas: HistogramValuesI[]): number {\r\n    const dataValues = datas.map((d: HistogramValuesI) => d.value);\r\n    this.rangeYLin = Math.max(...dataValues);\r\n    return this.rangeYLin;\r\n  }\r\n\r\n  getLogRangeY(datas: HistogramValuesI[]): RangeXLinI {\r\n    const dataValues = datas.map((e) => e.logValue).filter((e) => e !== 0);\r\n    this.rangeYLog.max = Math.max(...dataValues);\r\n    this.rangeYLog.min = Math.min(...dataValues);\r\n\r\n    return this.rangeYLog;\r\n  }\r\n\r\n  getLinRatioY(h: number, padding: number = 0): number {\r\n    let ratioY = (h - padding / 2) / this.rangeYLin;\r\n    return ratioY;\r\n  }\r\n\r\n  getLogRatioY(h: number, padding: number = 0): number {\r\n    let ratioY;\r\n    // @ts-ignore\r\n    let shift = Math.abs(this.rangeYLog.min) - Math.abs(this.rangeYLog.max);\r\n    ratioY = (h - padding / 2) / shift;\r\n    return ratioY;\r\n  }\r\n\r\n  computeXbarsDimensions(\r\n    datas: HistogramValuesI[],\r\n    xType: string\r\n  ): HistogramBarVO[] {\r\n    let bars: HistogramBarVO[] = [];\r\n\r\n    datas.forEach((d: HistogramValuesI, i: number) => {\r\n      let histogramBar = new HistogramBarVO(\r\n        d,\r\n        // @ts-ignore\r\n        this.rangeXLog.middlewidth,\r\n        xType\r\n      );\r\n      if (xType === HistogramType.XLIN) {\r\n        histogramBar.computeXLin(bars);\r\n      } else {\r\n        histogramBar.computeXLog(bars);\r\n      }\r\n      bars.push(histogramBar);\r\n    });\r\n    return bars;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-khiops-histogram-tooltip',\r\n  template: `\r\n    <div\r\n      [ngStyle]=\"{\r\n        'left.px': this.computeXPos(),\r\n        'top.px': this.computeYPos()\r\n      }\"\r\n      class=\"tooltip\"\r\n      [style.display]=\"display ? 'block' : 'none'\"\r\n    >\r\n      <p [innerHTML]=\"text\"></p>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .tooltip {\r\n        font-family: verdana;\r\n        position: absolute;\r\n        background-color: rgba(0, 0, 0, 0.8);\r\n        color: #fff;\r\n        font-weight: 200;\r\n        z-index: 2;\r\n        padding: 0 10px;\r\n        border-radius: 5px;\r\n        font-size: 0.8rem;\r\n        pointer-events: none;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NgxKhiopsHistogramTooltipComponent {\r\n  @Input() text: string = '';\r\n  @Input() posX: number = 0;\r\n  @Input() posY: number = 0;\r\n  @Input() canvasW: number = 0;\r\n  @Input() display: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  computeYPos() {\r\n    let top = this.posY - 0;\r\n    if (top < 10) {\r\n      top = 10;\r\n    }\r\n    return top;\r\n  }\r\n\r\n  computeXPos() {\r\n    let left = this.posX + 20;\r\n    if (left < 10) {\r\n      left = 10;\r\n    }\r\n    if (left > this.canvasW - 170) {\r\n      left = this.posX - 170;\r\n    }\r\n    return left;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { format } from 'mathjs';\r\nimport { ResizedEvent } from 'angular-resize-event';\r\nimport { Subject, debounceTime } from 'rxjs';\r\nimport { HistogramBarVO } from '../../model/ngx-khiops-histogram.bar-vo';\r\nimport * as d3 from 'd3';\r\nimport {\r\n  HistogramValuesI,\r\n  RangeXLogI,\r\n  RangeXLinI,\r\n  RangeYLogI,\r\n  HistogramOptions,\r\n} from '../../interfaces/ngx-khiops-histogram.interfaces';\r\nimport { HistogramService } from '../../services/ngx-khiops-histogram.service';\r\nimport { HistogramType } from '../../model/ngx-khiops-histogram.types';\r\nimport { HistogramUIService } from '../../services/ngx-khiops-histogram.ui.service';\r\n\r\n@Component({\r\n  selector: 'ngx-khiops-histogram',\r\n  templateUrl: './ngx-khiops-histogram.component.html',\r\n  styleUrl: './ngx-khiops-histogram.component.scss',\r\n})\r\nexport class NgxKhiopsHistogramComponent {\r\n  @ViewChild('chart', { static: false })\r\n  chart!: ElementRef;\r\n\r\n  componentType = 'histogram'; // needed to copy datas\r\n  svg: d3.Selection<SVGElement, unknown, HTMLElement, any> | undefined;\r\n  private resizeSubject = new Subject<ResizedEvent>();\r\n\r\n  // Outputs\r\n  @Output() selectedItemChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n  // Dynamic values\r\n  @Input() datas: HistogramValuesI[] | undefined;\r\n  @Input() datasLabels: any;\r\n  @Input() selectedItem: number = 0;\r\n  @Input() graphOptionX: HistogramType | undefined = HistogramType.YLOG;\r\n  @Input() graphOptionY: HistogramType | undefined = HistogramType.YLOG;\r\n  @Input() options: HistogramOptions = {\r\n    selectedBarColor: 'black',\r\n    gridColor: '#e5e5e5',\r\n    xPadding: 40,\r\n    yPadding: 50,\r\n    minBarHeight: 4,\r\n  };\r\n\r\n  h: number = 0;\r\n  w: number = 0;\r\n  bars: HistogramBarVO[] = [];\r\n\r\n  // Static config values\r\n  xTickCount: number = 0;\r\n  yTicksCount = 10;\r\n  tickSize = 0;\r\n\r\n  // selectedBarColor: string =\r\n  //   localStorage.getItem(\r\n  //     AppConfig.visualizationCommon.GLOBAL.LS_ID + 'THEME_COLOR'\r\n  //   ) === 'dark'\r\n  //     ? 'white'\r\n  //     : 'black';\r\n\r\n  // Local variables\r\n  rangeXLog: RangeXLogI | undefined;\r\n  rangeXLin: RangeXLinI | undefined;\r\n  rangeYLin: number | undefined;\r\n  rangeYLog: RangeYLogI | undefined;\r\n\r\n  ratioY = 0;\r\n  ratio: number = 0;\r\n  isLoading: boolean = false;\r\n\r\n  colorSet: string[];\r\n\r\n  ctx: CanvasRenderingContext2D | null | undefined;\r\n  ctxSelected: CanvasRenderingContext2D | null | undefined;\r\n  ctxHover: CanvasRenderingContext2D | null | undefined;\r\n\r\n  histogramCanvas: HTMLCanvasElement | null | undefined;\r\n  histogramHoverCanvas: HTMLCanvasElement | null | undefined;\r\n  histogramSelectedCanvas: HTMLCanvasElement | null | undefined;\r\n\r\n  tooltipText: string = '';\r\n  tooltipPosX: number = 0;\r\n  tooltipPosY: number = 0;\r\n  tooltipDisplay: boolean = false;\r\n\r\n  constructor(\r\n    private histogramService: HistogramService,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.colorSet = HistogramUIService.getColors();\r\n    this.resizeSubject.pipe(debounceTime(100)).subscribe((event) => {\r\n      this.handleResized(event);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.histogramCanvas = document.getElementById(\r\n      'histogram-canvas'\r\n    ) as HTMLCanvasElement;\r\n    this.histogramSelectedCanvas = document.getElementById(\r\n      'histogram-canvas-selected'\r\n    ) as HTMLCanvasElement;\r\n    this.histogramHoverCanvas = document.getElementById(\r\n      'histogram-canvas-hover'\r\n    ) as HTMLCanvasElement;\r\n    this.histogramSelectedCanvas?.addEventListener(\r\n      'click',\r\n      this.handleCanvasClick.bind(this)\r\n    );\r\n    this.histogramSelectedCanvas?.addEventListener(\r\n      'mousemove',\r\n      this.handleCanvasMove.bind(this)\r\n    );\r\n    this.histogramSelectedCanvas?.addEventListener(\r\n      'mouseout',\r\n      this.handleCanvasOut.bind(this)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.histogramSelectedCanvas?.removeEventListener(\r\n      'click',\r\n      this.handleCanvasClick.bind(this)\r\n    );\r\n    this.histogramSelectedCanvas?.removeEventListener(\r\n      'mousemove',\r\n      this.handleCanvasMove.bind(this)\r\n    );\r\n    this.histogramSelectedCanvas?.removeEventListener(\r\n      'mouseout',\r\n      this.handleCanvasOut.bind(this)\r\n    );\r\n  }\r\n\r\n  changeGraphTypeX(type: HistogramType) {\r\n    // localStorage.setItem(\r\n    //   this.khiopsLibraryService.getAppConfig().common.GLOBAL.LS_ID +\r\n    //     'DISTRIBUTION_GRAPH_OPTION_X',\r\n    //   type\r\n    // );\r\n    this.graphOptionX = type;\r\n    this.datas && this.init();\r\n  }\r\n\r\n  changeGraphTypeY(type: HistogramType) {\r\n    // localStorage.setItem(\r\n    //   this.khiopsLibraryService.getAppConfig().common.GLOBAL.LS_ID +\r\n    //     'DISTRIBUTION_GRAPH_OPTION_Y',\r\n    //   type\r\n    // );\r\n    this.graphOptionY = type;\r\n    this.datas && this.init();\r\n  }\r\n\r\n  onResized(event: ResizedEvent) {\r\n    this.resizeSubject.next(event);\r\n  }\r\n\r\n  handleResized(event: ResizedEvent) {\r\n    this.h = this.chart.nativeElement.offsetHeight + 10 - 60; // graph header = 60, +10 to take more height\r\n    this.w = this.chart.nativeElement.offsetWidth;\r\n\r\n    // Do it every timesto be sure that chart height has been computed\r\n    this.datas && this.init();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['options']) {\r\n      console.log(\r\n        'NgxKhiopsHistogramComponent ~ ngOnChanges ~ changes:',\r\n        changes\r\n      );\r\n      this.renderer.setStyle(\r\n        this.el.nativeElement,\r\n        '--chart-border',\r\n        this.options.gridColor\r\n      );\r\n    }\r\n    if (changes['datas'] && !changes['datas'].firstChange) {\r\n      this.datas && this.init();\r\n    }\r\n    if (changes['graphOptionX'] && !changes['graphOptionX'].firstChange) {\r\n      this.datas && this.init();\r\n    }\r\n    if (changes['graphOptionY'] && !changes['graphOptionY'].firstChange) {\r\n      this.datas && this.init();\r\n    }\r\n    if (changes['selectedItem']) {\r\n      this.drawSelectedItem();\r\n    }\r\n  }\r\n\r\n  handleCanvasClick(event: any) {\r\n    const canvasPosition = this.histogramCanvas?.getBoundingClientRect();\r\n    if (this.datas && canvasPosition) {\r\n      const barPosition = HistogramUIService.getCurrentBarPosition(\r\n        this.datas,\r\n        canvasPosition,\r\n        event,\r\n        this.options.yPadding\r\n      );\r\n      if (barPosition !== undefined) {\r\n        this.selectedItem = barPosition;\r\n        this.selectedItemChanged.emit(this.selectedItem);\r\n        this.drawSelectedItem();\r\n      } else {\r\n        // no bar selected\r\n      }\r\n    }\r\n  }\r\n\r\n  drawSelectedItem() {\r\n    HistogramUIService.cleanDomContext(\r\n      this.ctxSelected,\r\n      this.histogramSelectedCanvas\r\n    );\r\n    // reDraw selected item in front of others\r\n    if (this.ctxSelected && this.datas) {\r\n      this.drawRect(\r\n        this.ctxSelected,\r\n        this.datas[this.selectedItem],\r\n        this.bars[this.selectedItem],\r\n        this.ratio,\r\n        true\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCanvasOut() {\r\n    this.hideTooltip();\r\n    HistogramUIService.cleanDomContext(\r\n      this.ctxHover,\r\n      this.histogramHoverCanvas\r\n    );\r\n  }\r\n\r\n  handleCanvasMove(event: any) {\r\n    const canvasPosition = this.histogramCanvas?.getBoundingClientRect();\r\n    if (this.datas && canvasPosition) {\r\n      const barPosition = HistogramUIService.getCurrentBarPosition(\r\n        this.datas,\r\n        canvasPosition,\r\n        event,\r\n        this.options.yPadding\r\n      );\r\n\r\n      if (barPosition !== undefined) {\r\n        const bar = this.datas[barPosition];\r\n        const tooltipText = HistogramUIService.generateTooltip(\r\n          this.datasLabels,\r\n          bar,\r\n          barPosition === 0\r\n        );\r\n        this.showTooltip(event, tooltipText);\r\n\r\n        HistogramUIService.cleanDomContext(\r\n          this.ctxHover,\r\n          this.histogramHoverCanvas\r\n        );\r\n        if (this.ctxHover) {\r\n          this.drawRect(\r\n            this.ctxHover,\r\n            this.datas[barPosition],\r\n            this.bars[barPosition],\r\n            this.ratio\r\n          );\r\n        }\r\n      } else {\r\n        this.hideTooltip();\r\n      }\r\n    }\r\n  }\r\n\r\n  showTooltip(event: MouseEvent, text: string) {\r\n    this.tooltipPosX = event.offsetX + 20;\r\n    this.tooltipPosY = event.offsetY - 40;\r\n    this.tooltipText = text;\r\n    this.tooltipDisplay = true;\r\n  }\r\n\r\n  hideTooltip() {\r\n    this.tooltipDisplay = false;\r\n  }\r\n\r\n  init() {\r\n    console.log('HistogramComponent ~ ngOnInit ~ this.datas:', this.datas);\r\n    if (this.histogramCanvas) {\r\n      HistogramUIService.cleanDomContext(this.ctx, this.histogramCanvas);\r\n      HistogramUIService.cleanDomContext(\r\n        this.ctxHover,\r\n        this.histogramHoverCanvas\r\n      );\r\n      HistogramUIService.cleanDomContext(\r\n        this.ctxSelected,\r\n        this.histogramSelectedCanvas\r\n      );\r\n      this.ctx = HistogramUIService.initCanvasContext(\r\n        this.histogramCanvas,\r\n        this.w,\r\n        this.h\r\n      );\r\n      this.ctxHover = HistogramUIService.initCanvasContext(\r\n        this.histogramHoverCanvas,\r\n        this.w,\r\n        this.h\r\n      );\r\n      this.ctxSelected = HistogramUIService.initCanvasContext(\r\n        this.histogramSelectedCanvas,\r\n        this.w,\r\n        this.h\r\n      );\r\n\r\n      this.xTickCount = 5; // We must reinit each times\r\n\r\n      if (this.chart) {\r\n        this.chart.nativeElement.innerHTML = '';\r\n        if (this.datas) {\r\n          if (this.datas.length > 500) {\r\n            // display loading\r\n            this.isLoading = true;\r\n          }\r\n\r\n          setTimeout(\r\n            () => {\r\n              // const t0 = performance.now();\r\n              if (this.datas) {\r\n                if (this.graphOptionY === HistogramType.YLOG) {\r\n                  this.rangeYLog = this.histogramService.getLogRangeY(\r\n                    this.datas\r\n                  );\r\n                  this.ratioY = this.histogramService.getLogRatioY(\r\n                    this.h,\r\n                    this.options.yPadding\r\n                  );\r\n                } else {\r\n                  this.rangeYLin = this.histogramService.getLinRangeY(\r\n                    this.datas\r\n                  );\r\n                  this.ratioY = this.histogramService.getLinRatioY(\r\n                    this.h,\r\n                    this.options.yPadding\r\n                  );\r\n                }\r\n\r\n                this.drawChart(this.w);\r\n\r\n                [this.rangeXLin, this.rangeXLog] =\r\n                  this.histogramService.getRangeX(this.datas);\r\n\r\n                if (\r\n                  this.rangeXLog.negValuesCount === 0 ||\r\n                  this.rangeXLog.posValuesCount === 0\r\n                ) {\r\n                  this.xTickCount = this.xTickCount * 2;\r\n                }\r\n\r\n                this.drawYAxis();\r\n                this.drawHistogram(this.datas);\r\n\r\n                if (this.graphOptionX === HistogramType.XLIN) {\r\n                  let shift = 0;\r\n                  let width = this.w - 2 * this.options.xPadding;\r\n                  let domain = [this.rangeXLin.min, this.rangeXLin.max];\r\n                  let tickValues = this.datas.map(\r\n                    (e: HistogramValuesI) => e.partition[0]\r\n                  );\r\n                  tickValues.push(\r\n                    this.datas[this.datas.length - 1].partition[1]\r\n                  );\r\n                  // @ts-ignore\r\n                  this.drawXAxis(domain, shift, width);\r\n                } else {\r\n                  // Draw positive axis\r\n                  let shift = 0;\r\n                  let width = 0;\r\n                  let domain: number[] = [];\r\n\r\n                  if (\r\n                    this.rangeXLog.posStart !== this.rangeXLog.max &&\r\n                    this.rangeXLog.posValuesCount\r\n                  ) {\r\n                    width = this.w - 2 * this.options.xPadding;\r\n                    // @ts-ignore\r\n                    domain = [this.rangeXLog.posStart, this.rangeXLog.max];\r\n\r\n                    let shiftInf = 2;\r\n                    if (this.rangeXLog.inf && !this.rangeXLog.negStart) {\r\n                      shiftInf = 1;\r\n                    }\r\n                    if (\r\n                      !this.rangeXLog.inf &&\r\n                      this.rangeXLog.negValuesCount === 0\r\n                    ) {\r\n                      shiftInf = 0; // only positive values\r\n                    }\r\n                    shift +=\r\n                      ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                      // @ts-ignore\r\n                      Math.log10(this.rangeXLog.middlewidth) *\r\n                      shiftInf;\r\n\r\n                    if (this.rangeXLog.negValuesCount !== 0) {\r\n                      shift +=\r\n                        ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                        // @ts-ignore\r\n                        Math.log10(Math.abs(this.rangeXLog.min));\r\n                      shift -=\r\n                        ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                        // @ts-ignore\r\n                        Math.log10(Math.abs(this.rangeXLog.negStart));\r\n                    }\r\n                    width = this.w - 2 * this.options.xPadding - shift;\r\n                    this.drawXAxis(domain, shift, width);\r\n                  }\r\n\r\n                  // Draw -Inf axis\r\n                  if (this.rangeXLog.inf) {\r\n                    if (this.rangeXLog.posValuesCount) {\r\n                      let middleShift =\r\n                        shift -\r\n                        ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                          // @ts-ignore\r\n                          Math.log10(this.rangeXLog.middlewidth);\r\n                      domain = [1];\r\n                      this.drawXAxis(domain, middleShift - 1, 1);\r\n                    } else {\r\n                      let middleShift = this.w - 2 * this.options.xPadding;\r\n                      domain = [1];\r\n                      this.drawXAxis(domain, middleShift - 1, 1); // 1 to make bigger line\r\n                    }\r\n                  }\r\n\r\n                  // Draw negative axis\r\n                  if (\r\n                    // this.rangeXLog.inf ||\r\n                    this.rangeXLog.negStart !== this.rangeXLog.min &&\r\n                    this.rangeXLog.negValuesCount\r\n                  ) {\r\n                    width = this.w - 2 * this.options.xPadding - width;\r\n                    // @ts-ignore\r\n                    domain = [this.rangeXLog.min, this.rangeXLog.negStart];\r\n\r\n                    if (this.rangeXLog.posValuesCount) {\r\n                      // If there is pos and neg values\r\n                      width =\r\n                        width -\r\n                        ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                          // @ts-ignore\r\n                          Math.log10(this.rangeXLog.middlewidth) *\r\n                          2;\r\n                    } else {\r\n                      if (this.rangeXLog.inf) {\r\n                        width =\r\n                          width -\r\n                          ((this.w - 2 * this.options.xPadding) / this.ratio) *\r\n                            // @ts-ignore\r\n                            Math.log10(this.rangeXLog.middlewidth);\r\n                      }\r\n                    }\r\n                    this.drawXAxis(domain, 0, width);\r\n                  }\r\n                }\r\n                this.drawSelectedItem();\r\n                // const t1 = performance.now();\r\n                // console.log('draw histogram ' + (t1 - t0) + ' milliseconds.');\r\n                this.isLoading = false;\r\n              }\r\n            },\r\n            this.isLoading ? 100 : 0\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawChart(chartW: number) {\r\n    //@ts-ignore\r\n    this.svg = d3\r\n      .select(this.chart.nativeElement)\r\n      .append('svg')\r\n      .attr('width', chartW)\r\n      .attr('height', this.h + this.options.yPadding);\r\n  }\r\n\r\n  drawRect(\r\n    ctx: CanvasRenderingContext2D,\r\n    d: HistogramValuesI,\r\n    bar: HistogramBarVO,\r\n    ratio: number = 0,\r\n    selectedItem: boolean = false\r\n  ) {\r\n    if (ctx) {\r\n      let barX: number, barH: number, barW: number;\r\n\r\n      if (this.graphOptionX === HistogramType.XLIN) {\r\n        barX = ((this.w - 2 * this.options.xPadding) / ratio) * bar.barXlin;\r\n        barW = ((this.w - 2 * this.options.xPadding) / ratio) * bar.barWlin;\r\n      } else {\r\n        barX = ((this.w - 2 * this.options.xPadding) / ratio) * bar.barXlog;\r\n        barW = ((this.w - 2 * this.options.xPadding) / ratio) * bar.barWlog;\r\n      }\r\n\r\n      if (this.graphOptionY === HistogramType.YLIN) {\r\n        barH = d.value * this.ratioY;\r\n      } else {\r\n        if (d.logValue !== 0) {\r\n          // @ts-ignore\r\n          let shift = Math.abs(this.rangeYLog.max);\r\n          barH = Math.abs(d.logValue) * this.ratioY - shift * this.ratioY;\r\n          barH = this.h - this.options.yPadding / 2 - barH;\r\n        } else {\r\n          barH = 0;\r\n        }\r\n      }\r\n      if (barH !== 0 && barH < this.options.minBarHeight) {\r\n        barH = this.options.minBarHeight;\r\n      }\r\n      if (this.graphOptionY === HistogramType.YLOG && barH === 0) {\r\n        barH = this.options.minBarHeight;\r\n      }\r\n\r\n      const x = barX + this.options.xPadding + this.options.xPadding / 2;\r\n      const y = this.h - barH;\r\n\r\n      // keep current coords to bind clicks and tooltip\r\n      d.coords = {\r\n        x: x,\r\n        y: y,\r\n        barW: barW,\r\n        barH: barH,\r\n      };\r\n\r\n      ctx.fillStyle = HistogramUIService.hexToRgba(bar.color, 0.8);\r\n      ctx.lineWidth = 0;\r\n      ctx.fillRect(x, y, barW, barH);\r\n      ctx.strokeStyle = selectedItem\r\n        ? this.options.selectedBarColor\r\n        : bar.color;\r\n      ctx.lineWidth = selectedItem ? 2 : 1;\r\n      ctx.strokeRect(x, y, barW, barH);\r\n    }\r\n  }\r\n\r\n  drawHistogram(datasSet: HistogramValuesI[]) {\r\n    this.bars = this.histogramService.computeXbarsDimensions(\r\n      datasSet,\r\n      // @ts-ignore\r\n      this.graphOptionX\r\n    );\r\n    this.ratio = 0;\r\n    if (this.graphOptionX === HistogramType.XLIN) {\r\n      this.ratio =\r\n        this.bars[this.bars.length - 1].barXlin +\r\n        this.bars[this.bars.length - 1].barWlin;\r\n    } else {\r\n      this.ratio =\r\n        this.bars[this.bars.length - 1].barXlog +\r\n        this.bars[this.bars.length - 1].barWlog;\r\n    }\r\n\r\n    datasSet.forEach((d: HistogramValuesI, i: number) => {\r\n      // @ts-ignore\r\n      this.drawRect(this.ctx, d, this.bars[i], this.ratio);\r\n    });\r\n  }\r\n\r\n  drawXAxis(domain: number[], shift: number, width: number) {\r\n    if (width !== 0) {\r\n      let xAxis;\r\n      shift = shift + this.options.xPadding;\r\n\r\n      if (this.graphOptionX === HistogramType.XLIN) {\r\n        xAxis = d3.scaleLinear().domain(domain).range([0, width]); // This is where the axis is placed: from 100px to 800px\r\n      } else {\r\n        xAxis = d3.scaleLog().base(10).domain(domain).range([0, width]);\r\n      }\r\n\r\n      //@ts-ignore\r\n      const axis: d3.Axis<d3.NumberValue> = d3\r\n        .axisBottom(xAxis)\r\n        .ticks([this.xTickCount])\r\n        .tickArguments([this.xTickCount, '.0e'])\r\n        .tickSize(-this.h + this.options.yPadding / 2);\r\n\r\n      if (this.graphOptionX === HistogramType.XLIN) {\r\n        //@ts-ignore\r\n        axis.tickFormat((d: number) => {\r\n          let val: any = d;\r\n          return '' + format(val);\r\n        });\r\n      }\r\n\r\n      this.svg!.insert('g', ':first-child')\r\n        .attr('class', 'barXlog axis-grid')\r\n        .attr(\r\n          'transform',\r\n          'translate(' +\r\n            (shift + this.options.xPadding / 2) +\r\n            ',' +\r\n            this.h +\r\n            ') '\r\n        ) // This controls the vertical position of the Axis\r\n        .call(axis)\r\n        .selectAll('text')\r\n        .style('text-anchor', 'end')\r\n        .attr('dx', '-0.4em')\r\n        .attr('dy', '1em')\r\n        .attr('transform', 'rotate(-35)');\r\n\r\n      d3.selectAll('line').style('stroke', this.options.gridColor); // Set the grid color\r\n    }\r\n  }\r\n\r\n  drawYAxis() {\r\n    let y;\r\n\r\n    // Create the scale\r\n    if (this.graphOptionY === HistogramType.YLIN) {\r\n      y = d3\r\n        .scaleLinear()\r\n        // @ts-ignore\r\n        .domain([0, this.rangeYLin]) // This is what is written on the Axis: from 0 to 100\r\n        .range([this.h - this.options.yPadding / 2, 0]); // Note it is reversed\r\n    } else {\r\n      y = d3\r\n        .scaleLinear()\r\n        // @ts-ignore\r\n        .domain([this.rangeYLog.max, this.rangeYLog.min]) // This is what is written on the Axis: from 0 to 100\r\n        .range([0, this.h - this.options.yPadding / 2]); // Note it is reversed\r\n    }\r\n\r\n    let shift = this.options.xPadding;\r\n    this.tickSize = -(this.w - this.options.xPadding * 2);\r\n\r\n    // Draw the axis\r\n    const axis = d3\r\n      .axisLeft(y)\r\n      .tickSize(this.tickSize)\r\n      .tickPadding(10)\r\n      // @ts-ignore\r\n      .tickFormat((d: number) => {\r\n        let val: number = d;\r\n        if (this.graphOptionY === HistogramType.YLIN) {\r\n          return '' + format(val);\r\n        } else {\r\n          const antiLog = Math.pow(10, val);\r\n          return d3.format('.0e')(antiLog);\r\n        }\r\n      })\r\n\r\n      .ticks(this.yTicksCount);\r\n    // @ts-ignore\r\n    this.svg\r\n      .append('g')\r\n      .attr('class', 'y axis-grid')\r\n      .attr(\r\n        'transform',\r\n        'translate(' +\r\n          (shift + this.options.xPadding / 2) +\r\n          ',' +\r\n          this.options.yPadding / 2 +\r\n          ')'\r\n      ) // This controls the vertical position of the Axis\r\n      .call(axis)\r\n      .selectAll('line')\r\n      .style('stroke', this.options.gridColor); // Set the grid color\r\n  }\r\n}\r\n","<div class=\"app-histogram\" fxFlexFill (resized)=\"onResized($event)\">\r\n  <canvas id=\"histogram-canvas\" fxFlex> </canvas>\r\n  <canvas id=\"histogram-canvas-hover\" fxFlex> </canvas>\r\n  <canvas id=\"histogram-canvas-selected\" fxFlex> </canvas>\r\n  <div #chart id=\"histogram-chart\"></div>\r\n  <ngx-khiops-histogram-tooltip\r\n    [text]=\"tooltipText\"\r\n    [canvasW]=\"w\"\r\n    [posX]=\"tooltipPosX\"\r\n    [posY]=\"tooltipPosY\"\r\n    [display]=\"tooltipDisplay\"\r\n  >\r\n  </ngx-khiops-histogram-tooltip>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxKhiopsHistogramComponent } from './components/histogram/ngx-khiops-histogram.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxKhiopsHistogramTooltipComponent } from './components/tooltip/ngx-khiops-histogram.tooltip.component';\r\nimport { AngularResizeEventModule } from 'angular-resize-event';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AngularResizeEventModule],\r\n  declarations: [\r\n    NgxKhiopsHistogramComponent,\r\n    NgxKhiopsHistogramTooltipComponent,\r\n  ],\r\n  exports: [NgxKhiopsHistogramComponent, NgxKhiopsHistogramTooltipComponent],\r\n})\r\nexport class NgxKhiopsHistogramModule {}\r\n","/*\r\n * Public API Surface of ngx-khiops-histogram\r\n */\r\n\r\n// export * from './lib/components/ngx-khiops-histogram.service';\r\nexport * from './lib/components/histogram/ngx-khiops-histogram.component';\r\nexport * from './lib/components/tooltip/ngx-khiops-histogram.tooltip.component';\r\nexport * from './lib/ngx-khiops-histogram.module';\r\nexport * from './lib/interfaces/ngx-khiops-histogram.interfaces';\r\nexport * from './lib/model/ngx-khiops-histogram.types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.HistogramService","i3.NgxKhiopsHistogramTooltipComponent"],"mappings":";;;;;;;;;;IAAY,cAKX;AALD,CAAA,UAAY,aAAa,EAAA;AACvB,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALW,aAAa,KAAb,aAAa,GAKxB,EAAA,CAAA,CAAA;;MCGY,kBAAkB,CAAA;AACb,IAAA,SAAA,IAAA,CAAA,WAAW,GAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,EAAA;;AAG/D,IAAA,OAAO,qBAAqB,GAAA;;;KAG3B;IAED,OAAO,QAAQ,CAAC,CAAS,EAAA;AACvB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KAC5B;AAED,IAAA,OAAO,SAAS,GAAA;QACd,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;IAGD,OAAO,qBAAqB,CAC1B,KAAyB,EACzB,cAAuB,EACvB,KAAiB,EACjB,QAAA,GAAmB,CAAC,EAAA;QAEpB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC;YAC1C,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,gBAAA;;gBAEE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;oBAExB,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,GAAG,QAAQ,GAAG,CAAC;;oBAEjE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;oBAExB,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAClD;AACA,oBAAA,OAAO,CAAC,CAAC;iBACV;aACF;SACF;AAED,QAAA,OAAO,SAAS,CAAC;KAClB;AAED,IAAA,OAAO,eAAe,CACpB,WAAgB,EAChB,CAAmB,EACnB,eAAwB,EAAA;QAExB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,eAAe,EAAE;YACnB,MAAM,IAAI,GAAG,CAAC;SACf;aAAM;YACL,MAAM,IAAI,GAAG,CAAC;SACf;AACD,QAAA,MAAM,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACvD;;AAEE,QAAA,WAAW,CAAC,KAAK;YACjB,IAAI;YACJ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACzB,MAAM;;AAEN,YAAA,WAAW,CAAC,SAAS;YACrB,IAAI;AACJ,YAAA,CAAC,CAAC,SAAS;YACX,MAAM;;AAEN,YAAA,WAAW,CAAC,SAAS;YACrB,IAAI;AACJ,YAAA,MAAM,EACN;KACH;AAED,IAAA,OAAO,iBAAiB,CACtB,MAA4C,EAC5C,CAAS,EACT,CAAS,EAAA;QAET,MAAM,GAAG,GAAG,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;AACrC,QAAA,IAAI,GAAG,IAAI,MAAM,EAAE;AACjB,YAAA,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC;AACjC,YAAA,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACjB,YAAA,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAED;;AAEG;AACH,IAAA,OAAO,eAAe,CACpB,GAAgD,EAChD,MAA4C,EAAA;QAE5C,IAAI,MAAM,EAAE;;AAEV,YAAA,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;AAE9B,YAAA,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SAClD;KACF;AAED,IAAA,OAAO,SAAS,CAAC,GAAW,EAAE,KAAa,EAAA;QACzC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACzC,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;SACvC;AACD,QAAA,IAAI,CAAC,CAAC;AACN,QAAA,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AACpB,YAAA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACrE;aAAM;YACL,CAAC,GAAG,GAAG,CAAC;SACT;AACD,QAAA,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACtC,QAAA,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACtC,QAAA,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACtC,OAAO,CAAA,KAAA,EAAQ,CAAC,CAAK,EAAA,EAAA,CAAC,KAAK,CAAC,CAAA,EAAA,EAAK,KAAK,CAAA,CAAA,CAAG,CAAC;KAC3C;8GAxHU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCHY,cAAc,CAAA;AAQzB,IAAA,WAAA,CAAY,CAAmB,EAAE,WAAmB,EAAE,KAAa,EAAA;QAPnE,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;QACpB,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;QACpB,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;QACpB,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;AACpB,QAAA,IAAA,CAAA,KAAK,GAAW,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;;AAIb,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;AAC7B,QAAA,IAAI,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE;YAChC,IAAI,OAAO,GAAG,CAAC,CAAC;AAChB,YAAA,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBAClD,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;iBAAM;gBACL,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,OAAO,GAAG,CAAC,CAAC;AAChB,YAAA,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAChD,gBAAA,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC7C;iBAAM;gBACL,OAAO;AACL,oBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,wBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAE1C,gBAAA,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBAClD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAC7C;aACF;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAClC;KACF;AAED,IAAA,WAAW,CAAC,IAAsB,EAAA;AAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CACnB,CAAC,UAAkB,EAAE,CAAiB,KACpC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAC5C,CAAC,CACF,CAAC;AACF,QAAA,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC;KACzB;AAED,IAAA,WAAW,CAAC,IAAsB,EAAA;AAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CACnB,CAAC,UAAkB,EAAE,CAAiB,KACpC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAC5C,CAAC,CACF,CAAC;AACF,QAAA,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC;KACzB;AACF;;MC9CY,gBAAgB,CAAA;AAH7B,IAAA,WAAA,GAAA;QAIE,IAAS,CAAA,SAAA,GAAe,EAAE,CAAC;QAC3B,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC;AACtB,QAAA,IAAA,CAAA,SAAS,GAAe;AACtB,YAAA,GAAG,EAAE,CAAC;AACN,YAAA,GAAG,EAAE,CAAC;SACP,CAAC;QACF,IAAS,CAAA,SAAA,GAAe,EAAE,CAAC;AAoG5B,KAAA;AAlGC,IAAA,SAAS,CAAC,KAAyB,EAAA;QACjC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAmB,EAAA;AAC3D,YAAA,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,UAC3C,CAAmB,EAAA;YAEnB,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC3B,CAAC,EAAE,MAAM,CAAC;QACX,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,UAC3C,CAAmB,EAAA;YAEnB,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC3B,CAAC,EAAE,MAAM,CAAC;AACX,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;;YAEtB,IAAI,CAAC,SAAS,CAAC,QAAQ;;AAErB,gBAAA,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAmB,EAAA;AAC1C,oBAAA,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAClD,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,QAAQ;AACrB,gBAAA,KAAK,CAAC,IAAI,CAAC,UAAU,CAAmB,EAAA;AACtC,oBAAA,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACjD,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,QAAQ;;AAErB,gBAAA,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAmB,EAAA;AAC1C,oBAAA,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAClD,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,QAAQ;AACrB,gBAAA,KAAK,CAAC,IAAI,CAAC,UAAU,CAAmB,EAAA;AACtC,oBAAA,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACjD,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;SACjC;AAED,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAE1D,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC;AAEjC,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE1D,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KACzC;AAED,IAAA,YAAY,CAAC,KAAyB,EAAA;AACpC,QAAA,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAmB,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AAED,IAAA,YAAY,CAAC,KAAyB,EAAA;QACpC,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;QAE7C,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AAED,IAAA,YAAY,CAAC,CAAS,EAAE,OAAA,GAAkB,CAAC,EAAA;AACzC,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;AAChD,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,YAAY,CAAC,CAAS,EAAE,OAAA,GAAkB,CAAC,EAAA;AACzC,QAAA,IAAI,MAAM,CAAC;;QAEX,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxE,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,IAAI,KAAK,CAAC;AACnC,QAAA,OAAO,MAAM,CAAC;KACf;IAED,sBAAsB,CACpB,KAAyB,EACzB,KAAa,EAAA;QAEb,IAAI,IAAI,GAAqB,EAAE,CAAC;QAEhC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAmB,EAAE,CAAS,KAAI;AAC/C,YAAA,IAAI,YAAY,GAAG,IAAI,cAAc,CACnC,CAAC;;AAED,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAC1B,KAAK,CACN,CAAC;AACF,YAAA,IAAI,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE;AAChC,gBAAA,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAChC;iBAAM;AACL,gBAAA,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAChC;AACD,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC1B,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,IAAI,CAAC;KACb;8GA1GU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCqBY,kCAAkC,CAAA;AAO7C,IAAA,WAAA,GAAA;QANS,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;QAClB,IAAI,CAAA,IAAA,GAAW,CAAC,CAAC;QACjB,IAAI,CAAA,IAAA,GAAW,CAAC,CAAC;QACjB,IAAO,CAAA,OAAA,GAAW,CAAC,CAAC;QACpB,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;KAElB;IAEhB,WAAW,GAAA;AACT,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACxB,QAAA,IAAI,GAAG,GAAG,EAAE,EAAE;YACZ,GAAG,GAAG,EAAE,CAAC;SACV;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAC1B,QAAA,IAAI,IAAI,GAAG,EAAE,EAAE;YACb,IAAI,GAAG,EAAE,CAAC;SACX;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE;AAC7B,YAAA,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;SACxB;AACD,QAAA,OAAO,IAAI,CAAC;KACb;8GA1BU,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAlC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kCAAkC,EA7BnC,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;AAWT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,oLAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAkBU,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBA/B9C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,8BAA8B,EAC9B,QAAA,EAAA,CAAA;;;;;;;;;;;AAWT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,oLAAA,CAAA,EAAA,CAAA;wDAmBQ,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;;;MCPK,2BAA2B,CAAA;AAkEtC,IAAA,WAAA,CACU,gBAAkC,EAClC,EAAc,EACd,QAAmB,EAAA;QAFnB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;QACd,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAjE7B,QAAA,IAAA,CAAA,aAAa,GAAG,WAAW,CAAC;AAEpB,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAgB,CAAC;;AAG1C,QAAA,IAAA,CAAA,mBAAmB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAK7D,IAAY,CAAA,YAAA,GAAW,CAAC,CAAC;AACzB,QAAA,IAAA,CAAA,YAAY,GAA8B,aAAa,CAAC,IAAI,CAAC;AAC7D,QAAA,IAAA,CAAA,YAAY,GAA8B,aAAa,CAAC,IAAI,CAAC;AAC7D,QAAA,IAAA,CAAA,OAAO,GAAqB;AACnC,YAAA,gBAAgB,EAAE,OAAO;AACzB,YAAA,SAAS,EAAE,SAAS;AACpB,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,YAAY,EAAE,CAAC;SAChB,CAAC;QAEF,IAAC,CAAA,CAAA,GAAW,CAAC,CAAC;QACd,IAAC,CAAA,CAAA,GAAW,CAAC,CAAC;QACd,IAAI,CAAA,IAAA,GAAqB,EAAE,CAAC;;QAG5B,IAAU,CAAA,UAAA,GAAW,CAAC,CAAC;QACvB,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QACjB,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;QAeb,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QACX,IAAK,CAAA,KAAA,GAAW,CAAC,CAAC;QAClB,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAY3B,IAAW,CAAA,WAAA,GAAW,EAAE,CAAC;QACzB,IAAW,CAAA,WAAA,GAAW,CAAC,CAAC;QACxB,IAAW,CAAA,WAAA,GAAW,CAAC,CAAC;QACxB,IAAc,CAAA,cAAA,GAAY,KAAK,CAAC;AAO9B,QAAA,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,SAAS,EAAE,CAAC;AAC/C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AAC7D,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAC,CAAC,CAAC;KACJ;IAED,eAAe,GAAA;QACb,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,cAAc,CAC5C,kBAAkB,CACE,CAAC;QACvB,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,cAAc,CACpD,2BAA2B,CACP,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,cAAc,CACjD,wBAAwB,CACJ,CAAC;AACvB,QAAA,IAAI,CAAC,uBAAuB,EAAE,gBAAgB,CAC5C,OAAO,EACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;AACF,QAAA,IAAI,CAAC,uBAAuB,EAAE,gBAAgB,CAC5C,WAAW,EACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;AACF,QAAA,IAAI,CAAC,uBAAuB,EAAE,gBAAgB,CAC5C,UAAU,EACV,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;KACH;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,uBAAuB,EAAE,mBAAmB,CAC/C,OAAO,EACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;AACF,QAAA,IAAI,CAAC,uBAAuB,EAAE,mBAAmB,CAC/C,WAAW,EACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;AACF,QAAA,IAAI,CAAC,uBAAuB,EAAE,mBAAmB,CAC/C,UAAU,EACV,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,IAAmB,EAAA;;;;;;AAMlC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;KAC3B;AAED,IAAA,gBAAgB,CAAC,IAAmB,EAAA;;;;;;AAMlC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;KAC3B;AAED,IAAA,SAAS,CAAC,KAAmB,EAAA;AAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;AAED,IAAA,aAAa,CAAC,KAAmB,EAAA;AAC/B,QAAA,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,GAAG,EAAE,GAAG,EAAE,CAAC;QACzD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;;AAG9C,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;KAC3B;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;AACtB,YAAA,OAAO,CAAC,GAAG,CACT,sDAAsD,EACtD,OAAO,CACR,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,gBAAgB,EAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CACvB,CAAC;SACH;AACD,QAAA,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE;AACrD,YAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;SAC3B;AACD,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE;AACnE,YAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;SAC3B;AACD,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE;AACnE,YAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;SAC3B;AACD,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,EAAE;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;AAED,IAAA,iBAAiB,CAAC,KAAU,EAAA;QAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,qBAAqB,EAAE,CAAC;AACrE,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,cAAc,EAAE;YAChC,MAAM,WAAW,GAAG,kBAAkB,CAAC,qBAAqB,CAC1D,IAAI,CAAC,KAAK,EACV,cAAc,EACd,KAAK,EACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CACtB,CAAC;AACF,YAAA,IAAI,WAAW,KAAK,SAAS,EAAE;AAC7B,gBAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;gBAChC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACjD,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;;aAEN;SACF;KACF;IAED,gBAAgB,GAAA;QACd,kBAAkB,CAAC,eAAe,CAChC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,uBAAuB,CAC7B,CAAC;;QAEF,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;AAClC,YAAA,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5B,IAAI,CAAC,KAAK,EACV,IAAI,CACL,CAAC;SACH;KACF;IAED,eAAe,GAAA;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,kBAAkB,CAAC,eAAe,CAChC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,oBAAoB,CAC1B,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,KAAU,EAAA;QACzB,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,qBAAqB,EAAE,CAAC;AACrE,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,cAAc,EAAE;YAChC,MAAM,WAAW,GAAG,kBAAkB,CAAC,qBAAqB,CAC1D,IAAI,CAAC,KAAK,EACV,cAAc,EACd,KAAK,EACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CACtB,CAAC;AAEF,YAAA,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAA,MAAM,WAAW,GAAG,kBAAkB,CAAC,eAAe,CACpD,IAAI,CAAC,WAAW,EAChB,GAAG,EACH,WAAW,KAAK,CAAC,CAClB,CAAC;AACF,gBAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;gBAErC,kBAAkB,CAAC,eAAe,CAChC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,oBAAoB,CAC1B,CAAC;AACF,gBAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EACtB,IAAI,CAAC,KAAK,CACX,CAAC;iBACH;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;KACF;IAED,WAAW,CAAC,KAAiB,EAAE,IAAY,EAAA;QACzC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AACtC,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IAED,IAAI,GAAA;QACF,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACvE,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACnE,kBAAkB,CAAC,eAAe,CAChC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,oBAAoB,CAC1B,CAAC;YACF,kBAAkB,CAAC,eAAe,CAChC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,uBAAuB,CAC7B,CAAC;AACF,YAAA,IAAI,CAAC,GAAG,GAAG,kBAAkB,CAAC,iBAAiB,CAC7C,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,iBAAiB,CAClD,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;AACF,YAAA,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,iBAAiB,CACrD,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;AAEF,YAAA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAEpB,YAAA,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;AACxC,gBAAA,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;;AAE3B,wBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;qBACvB;oBAED,UAAU,CACR,MAAK;;AAEH,wBAAA,IAAI,IAAI,CAAC,KAAK,EAAE;4BACd,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;AAC5C,gCAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CACjD,IAAI,CAAC,KAAK,CACX,CAAC;AACF,gCAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC9C,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CACtB,CAAC;6BACH;iCAAM;AACL,gCAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CACjD,IAAI,CAAC,KAAK,CACX,CAAC;AACF,gCAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC9C,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CACtB,CAAC;6BACH;AAED,4BAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEvB,4BAAA,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;gCAC9B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAE9C,4BAAA,IACE,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,CAAC;AACnC,gCAAA,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,CAAC,EACnC;gCACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;6BACvC;4BAED,IAAI,CAAC,SAAS,EAAE,CAAC;AACjB,4BAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAE/B,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;gCAC5C,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,gCAAA,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC/C,gCAAA,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gCACtD,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAC7B,CAAC,CAAmB,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CACxC,CAAC;gCACF,UAAU,CAAC,IAAI,CACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAC/C,CAAC;;gCAEF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;6BACtC;iCAAM;;gCAEL,IAAI,KAAK,GAAG,CAAC,CAAC;gCACd,IAAI,KAAK,GAAG,CAAC,CAAC;gCACd,IAAI,MAAM,GAAa,EAAE,CAAC;gCAE1B,IACE,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG;AAC9C,oCAAA,IAAI,CAAC,SAAS,CAAC,cAAc,EAC7B;AACA,oCAAA,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;;AAE3C,oCAAA,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;oCAEvD,IAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,oCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;wCAClD,QAAQ,GAAG,CAAC,CAAC;qCACd;AACD,oCAAA,IACE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG;AACnB,wCAAA,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,CAAC,EACnC;AACA,wCAAA,QAAQ,GAAG,CAAC,CAAC;qCACd;oCACD,KAAK;AACH,wCAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;4CAElD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AACtC,4CAAA,QAAQ,CAAC;oCAEX,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,CAAC,EAAE;wCACvC,KAAK;AACH,4CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;AAElD,gDAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;wCAC3C,KAAK;AACH,4CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;AAElD,gDAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;qCACjD;AACD,oCAAA,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;oCACnD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iCACtC;;AAGD,gCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;AACtB,oCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;wCACjC,IAAI,WAAW,GACb,KAAK;AACL,4CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;gDAEhD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAC3C,wCAAA,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wCACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;qCAC5C;yCAAM;AACL,wCAAA,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AACrD,wCAAA,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,wCAAA,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;qCAC5C;iCACF;;AAGD,gCAAA;;gCAEE,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG;AAC9C,oCAAA,IAAI,CAAC,SAAS,CAAC,cAAc,EAC7B;AACA,oCAAA,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;;AAEnD,oCAAA,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAEvD,oCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;;wCAEjC,KAAK;4CACH,KAAK;AACL,gDAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;oDAEhD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AACtC,oDAAA,CAAC,CAAC;qCACP;yCAAM;AACL,wCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;4CACtB,KAAK;gDACH,KAAK;AACL,oDAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK;;wDAEhD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;yCAC5C;qCACF;oCACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;iCAClC;6BACF;4BACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;AAGxB,4BAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;yBACxB;AACH,qBAAC,EACD,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CACzB,CAAC;iBACH;aACF;SACF;KACF;AAED,IAAA,SAAS,CAAC,MAAc,EAAA;;QAEtB,IAAI,CAAC,GAAG,GAAG,EAAE;AACV,aAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aAChC,MAAM,CAAC,KAAK,CAAC;AACb,aAAA,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;AACrB,aAAA,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACnD;IAED,QAAQ,CACN,GAA6B,EAC7B,CAAmB,EACnB,GAAmB,EACnB,KAAgB,GAAA,CAAC,EACjB,YAAA,GAAwB,KAAK,EAAA;QAE7B,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,IAAY,EAAE,IAAY,EAAE,IAAY,CAAC;YAE7C,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;gBAC5C,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC;gBACpE,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC;aACrE;iBAAM;gBACL,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC;gBACpE,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC;aACrE;YAED,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;gBAC5C,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;aAC9B;iBAAM;AACL,gBAAA,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;;AAEpB,oBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAA,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAChE,oBAAA,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC;iBAClD;qBAAM;oBACL,IAAI,GAAG,CAAC,CAAC;iBACV;aACF;AACD,YAAA,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;AAClD,gBAAA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAClC;AACD,YAAA,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;AAC1D,gBAAA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAClC;AAED,YAAA,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;AACnE,YAAA,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;;YAGxB,CAAC,CAAC,MAAM,GAAG;AACT,gBAAA,CAAC,EAAE,CAAC;AACJ,gBAAA,CAAC,EAAE,CAAC;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,IAAI,EAAE,IAAI;aACX,CAAC;AAEF,YAAA,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7D,YAAA,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,GAAG,CAAC,WAAW,GAAG,YAAY;AAC5B,kBAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;AAC/B,kBAAE,GAAG,CAAC,KAAK,CAAC;AACd,YAAA,GAAG,CAAC,SAAS,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;YACrC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAClC;KACF;AAED,IAAA,aAAa,CAAC,QAA4B,EAAA;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CACtD,QAAQ;;QAER,IAAI,CAAC,YAAY,CAClB,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;AAC5C,YAAA,IAAI,CAAC,KAAK;AACR,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO;AACvC,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;SAC3C;aAAM;AACL,YAAA,IAAI,CAAC,KAAK;AACR,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO;AACvC,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;SAC3C;QAED,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAmB,EAAE,CAAS,KAAI;;YAElD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACvD,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,SAAS,CAAC,MAAgB,EAAE,KAAa,EAAE,KAAa,EAAA;AACtD,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;AACf,YAAA,IAAI,KAAK,CAAC;YACV,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAEtC,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;gBAC5C,KAAK,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;aAC3D;iBAAM;gBACL,KAAK,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;aACjE;;YAGD,MAAM,IAAI,GAA4B,EAAE;iBACrC,UAAU,CAAC,KAAK,CAAC;AACjB,iBAAA,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACxB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACvC,iBAAA,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAEjD,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;;AAE5C,gBAAA,IAAI,CAAC,UAAU,CAAC,CAAC,CAAS,KAAI;oBAC5B,IAAI,GAAG,GAAQ,CAAC,CAAC;AACjB,oBAAA,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1B,iBAAC,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,GAAI,CAAC,MAAM,CAAC,GAAG,EAAE,cAAc,CAAC;AAClC,iBAAA,IAAI,CAAC,OAAO,EAAE,mBAAmB,CAAC;iBAClC,IAAI,CACH,WAAW,EACX,YAAY;iBACT,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACnC,GAAG;AACH,gBAAA,IAAI,CAAC,CAAC;gBACN,IAAI,CACP;iBACA,IAAI,CAAC,IAAI,CAAC;iBACV,SAAS,CAAC,MAAM,CAAC;AACjB,iBAAA,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;AAC3B,iBAAA,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,iBAAA,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACjB,iBAAA,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAEpC,YAAA,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC9D;KACF;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,CAAC;;QAGN,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;AAC5C,YAAA,CAAC,GAAG,EAAE;AACH,iBAAA,WAAW,EAAE;;iBAEb,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3B,iBAAA,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACnD;aAAM;AACL,YAAA,CAAC,GAAG,EAAE;AACH,iBAAA,WAAW,EAAE;;AAEb,iBAAA,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChD,iBAAA,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;SACnD;AAED,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AAClC,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;;QAGtD,MAAM,IAAI,GAAG,EAAE;aACZ,QAAQ,CAAC,CAAC,CAAC;AACX,aAAA,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;aACvB,WAAW,CAAC,EAAE,CAAC;;AAEf,aAAA,UAAU,CAAC,CAAC,CAAS,KAAI;YACxB,IAAI,GAAG,GAAW,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,EAAE;AAC5C,gBAAA,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aACzB;iBAAM;gBACL,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBAClC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;aAClC;AACH,SAAC,CAAC;AAED,aAAA,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE3B,QAAA,IAAI,CAAC,GAAG;aACL,MAAM,CAAC,GAAG,CAAC;AACX,aAAA,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC;aAC5B,IAAI,CACH,WAAW,EACX,YAAY;aACT,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YACnC,GAAG;AACH,YAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC;YACzB,GAAG,CACN;aACA,IAAI,CAAC,IAAI,CAAC;aACV,SAAS,CAAC,MAAM,CAAC;aACjB,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC5C;8GAxoBU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAA3B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,gZC/BxC,+hBAcA,EAAA,MAAA,EAAA,CAAA,8vBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kCAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDiBa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,sBAAsB,EAAA,QAAA,EAAA,+hBAAA,EAAA,MAAA,EAAA,CAAA,8vBAAA,CAAA,EAAA,CAAA;mIAMhC,KAAK,EAAA,CAAA;sBADJ,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;gBAQ3B,mBAAmB,EAAA,CAAA;sBAA5B,MAAM;gBAGE,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;;;MElCK,wBAAwB,CAAA;8GAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,iBALjC,2BAA2B;AAC3B,YAAA,kCAAkC,aAH1B,YAAY,EAAE,wBAAwB,CAKtC,EAAA,OAAA,EAAA,CAAA,2BAA2B,EAAE,kCAAkC,CAAA,EAAA,CAAA,CAAA,EAAA;+GAE9D,wBAAwB,EAAA,OAAA,EAAA,CAPzB,YAAY,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAOrC,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBARpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,wBAAwB,CAAC;AACjD,oBAAA,YAAY,EAAE;wBACZ,2BAA2B;wBAC3B,kCAAkC;AACnC,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,2BAA2B,EAAE,kCAAkC,CAAC;AAC3E,iBAAA,CAAA;;;ACbD;;AAEG;AAEH;;ACJA;;AAEG;;;;"}